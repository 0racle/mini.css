// Definitions for tabs/horizontal accordions.
// Dependency: This module is somewhat dependent on the grid system.
// Tab styling
$tab-container-name:			'tabs' !default;								// Class name for the tabs container
.#{$tab-container-name} {
	width: 100%;
// Old syntax
	display: -webkit-box;
	-webkit-box-pack: justify;
// New syntax
	display: -webkit-flex;
	display:         flex;
	-webkit-justify-content: space-between;
  			justify-content: space-between;
  	-webkit-flex-wrap: wrap;
  			flex-wrap: wrap;
// Tab label styling
& > label {	
// Old syntax
	-webkit-box-flex: 1;
// New syntax
	-webkit-flex-grow: 1;
			flex-grow: 1;
// Make tab labels stay at the top on large displays
	-webkit-order: 1;
			order: 1;
// Actual styling		
	display: inline-block;
	height: $tab-label-height;
	cursor: pointer;
@if $tab-label-back-color != $back-color {
	background: $tab-label-back-color;
}
@if $tab-label-fore-color != $fore-color {
	color: $tab-label-fore-color;
}
@if $tab-border-style != 0 {
	border: $tab-border-style;
}
@if $tab-label-padding != 0 {
	padding: $tab-label-padding;
}
@if $tab-border-radius != 0 {	// Style first and last tabs' labels' top corners as needed
&:first-of-type {
	border-top-left-radius: $tab-border-radius;
}
&:last-of-type {
	border-top-right-radius: $tab-border-radius;
}
}
					// TODO ADD HOVER STYLES HERE AND ON ACCORDION
}
// Tab radio styling
& > [type="radio"] {
	display: none;
	visibility: hidden;
}
// Tab content styling
& > [type="radio"] + label + div {
// New syntax
	-webkit-flex-basis: auto;
			flex-basis: auto;
// Make tab panels display after all the labels on larger displays
	-webkit-order: 2;
			order: 2;
// Hide content, while allowing accessibility
	height: 1px;
	width: 1px;
    margin: -1px;
    overflow: hidden;
    position: absolute;
	clip: rect(0 0 0 0);
    -webkit-clip-path: inset(100%);
    		clip-path: inset(100%);
	transition: height 0.3s ease 0s;
// Style for tab labels except the first
@if $tab-border-style != 0 {
+ [type="radio"] + label {
	border-left: 0;
}
}
@if $tab-border-radius != 0 {
	border-bottom-left-radius: $tab-border-radius;
	border-bottom-right-radius: $tab-border-radius;
}
}
// Tab label styling for open tab
& > [type="radio"]:checked + label {
@if $tab-label-selected-back-color != $tab-label-back-color {
	background: $tab-label-selected-back-color;
}
@if $tab-label-selected-fore-color != $tab-label-fore-color {
	color: $tab-label-selected-fore-color;
}
}
// Tab content styling (open tab)
& > [type="radio"]:checked + label + div {
	box-sizing: border-box;
	position: relative;
	height: $tab-panel-height;
	width: 100%;
	overflow: auto;
	margin: 0;
@if $tab-panel-back-color != $back-color {
	background: $tab-panel-back-color;
}
@if $tab-panel-fore-color != $fore-color {
	color: $tab-panel-fore-color;
}
@if $tab-border-style != 0 {
	border: $tab-border-style;
	border-top: 0;
}
@if $tab-panel-padding != 0 {
	padding: $tab-panel-padding;
}
// Fix display for some browsers
	clip: auto;
    -webkit-clip-path: inset(0%);
    		clip-path: inset(0%);
}
}
// Responsiveness
@media only screen and (max-width: #{$tab-stacked-breakpoint}) {
.#{$tab-container-name} {
// Old syntax
	-webkit-box-orient: vertical;
// New syntax
	-webkit-flex-direction: column;
			flex-direction: column;
& > label {
	-webkit-order: initial;		// Reset order to show stacked tabs properly
			order: initial;		
@if $tab-border-radius != 0 {	// Style first and last tabs' labels' corners as needed
&:first-of-type {
	border-top-right-radius: $tab-border-radius;
}
&:last-of-type {
	border-top-right-radius: 0;
	border-bottom-left-radius: $tab-border-radius;
	border-bottom-right-radius: $tab-border-radius;
}
}
}
@if $tab-border-radius != 0 {	// Style the last tabs' label corners when it's open as needed
& > [type="radio"]:checked + label {
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
}
}
& > [type="radio"] + label + div {
	-webkit-order: initial;		// Reset order to show stacked tabs properly
			order: initial;	
@if $tab-border-radius != 0 {
	border-radius: 0;
}
& + [type="radio"] + label {
@if $tab-border-style != 0 {
	border: $tab-border-style;
	border-top: 0;
}
}
}
@if $tab-border-radius != 0 {
& > [type="radio"] + label + div:last-of-type {
	border-bottom-left-radius: $tab-border-radius;
	border-bottom-right-radius: $tab-border-radius;
}
}
}
}