// Definitions for utilities and helper classes.
// Hidden elements class. ATTENTION: Uses !important.
.#{$hidden-name}{
	display: none !important;
}
// Visually hidden elements class. ATTENTIONS: Uses !important.
.#{$visually-hidden-name} {
	position: absolute !important;
	width: 1px !important;
	height: 1px !important;
	margin: -1px !important;
	border: 0 !important;
	padding: 0 !important;
	clip-path: inset(100%);
	clip: rect(0 0 0 0);
	overflow: hidden !important;
}
// Breadcrumbs
ul.#{$breadcrumbs-name} {
	// Old syntax
	display: -webkit-box;
	// New syntax
	display: -webkit-flex;
	display: 		 flex;
	list-style: none;
	margin-left: 0;			// Reset margins from list styling
	margin-right: 0;		// Reset margins from list styling
	padding: 0;				// Remove unnecessary left and right empty space
	@if $breadcrumbs-border-style !=0 {
		border: $breadcrumbs-border-style;
	}
	@if $breadcrumbs-border-radius != 0 {
		border-radius: $breadcrumbs-border-radius;
	}
	@if $breadcrumbs-box-shadow != none {
		box-shadow: $breadcrumbs-box-shadow;
	}
	li {
		// Old syntax
		-webkit-box-flex: 1;
		max-width: 100%;
		// New syntax
		-webkit-flex-grow: 1;
				flex-grow: 1;
		-webkit-flex-basis: 0;
				flex-basis: 0;
		position: relative;
		text-align: center;
		background: $breadcrumbs-back-color;
		height: $breadcrumbs-height;
		line-height: $breadcrumbs-height;
		margin-right: ($breadcrumbs-height/2) + $breadcrumbs-separator-width;
		&:before, &:after {
			content: "";
			position: absolute;
			top: 0;
			width: 0;
			height: 0;
			border: 0 solid $breadcrumbs-back-color;
			border-width: ($breadcrumbs-height/2) ($breadcrumbs-height/4);
		}
		&:before {
			left: -($breadcrumbs-height/2);
			border-left-color: transparent;
		}
		&:after {
			left: 100%;
			border-color: transparent;
			border-left-color: $breadcrumbs-back-color;
		}
		&:first-child {
			&:before {
				border: 0;
			}
		}
		&:last-child {
			margin-right: 0;
			&:after {
				border: 0;
			}
		}
	}	
}
// Clearfix
.#{$clearfix-name} {
	&:before, &:after {
		content: ' ';
		display: table;
		clear: both;
	}
}
// Center block
.#{$center-block-name} {
	display: block;
	margin-left: auto;
	margin-right: auto;
}
// Generic border mixin. ATTENTION: Uses !important.
// Variables:
// - $border-generic-name : The name of the class used for the generic border.
@mixin make-border-generic ($border-generic-name) {
	.#{$border-generic-name} {
		border: 1px solid rgba(0,0,0, 0.25) !important;
	}
}
// Generic radial border mixin. ATTENTION: Uses !important.
// Variables:
// - $border-radial-name : The name of the class used for the radial border.
// - $border-radial-radius : The border radius used for the radial border.
@mixin make-border-radial-style ($border-radial-name, $border-radial-radius) {
	.#{$border-radial-name} {
		border-radius: $border-radial-radius !important;
	}	
}
// Generic box shadow mixin. ATTENTION: Uses !important.
// Variables:
// - $box-shadow-name : The name of the class used for the generic box shadow.
// - $box-shadow-value : The box shadow value of the generic box shadow.
@mixin make-box-shadow-generic ($box-shadow-name, $box-shadow-value) {
	.#{$box-shadow-name} {
		box-shadow: $box-shadow-value !important;
	}
}
// Floats mixin. ATTENTION: Uses !important.
// NOTE: This mixin might be obsolete and not play well with others.
// Variables:
// - $float-prefix : Prefix for the class names of floats.
@mixin make-floats ($float-prefix) {
	.#{$float-prefix}-left {
		float: left !important;
	}
	.#{$float-prefix}-right {
		float: right !important;
	}
}