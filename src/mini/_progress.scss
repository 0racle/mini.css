// Definitions for progress elements and spinners.
// Progress elements use the progress element as their base.
// Default styling for progress. Use mixins for alternate styles.
progress {
	display: block;
	vertical-align: baseline;	// Correct vertical alignment in certain browsers.	
	-webkit-appearance: none;
	   -moz-appearance: none;
			appearance: none;
	width: 100%;
	height: $progress-height;
	border: $progress-border-style;
	@if $progress-border-radius != 0 {
		border-radius: $progress-border-radius;
	}	
	@if $progress-margin != 0 {
		margin: $progress-margin;	
	}
	@if $progress-box-shadow != none {
		box-shadow: $progress-box-shadow;
	}
	background: $progress-back-color;		// Background color of the element (IE 10+ and Firefox).
	color: $progress-fore-color;			// Foreground of the element (IE 10+).
	&::-webkit-progress-value {				// Foreground of the element (webkit browsers).
		background: $progress-fore-color;
		@if $progress-border-radius != 0 {
			border-top-left-radius: $progress-border-radius;
			border-bottom-left-radius: $progress-border-radius;
		}
	}
	&::-webkit-progress-bar {				// Background of the element (webkit browsers).
		background: $progress-back-color;
	}
	&::-moz-progress-bar { 					// Foreground of the element (Firefox).
		background: $progress-fore-color;
		@if $progress-border-radius != 0 {
			border-top-left-radius: $progress-border-radius;
			border-bottom-left-radius: $progress-border-radius;
		}
	}
	&[value="100"] {
		&::-webkit-progress-value {
			@if $progress-border-radius != 0 {
				border-radius: $progress-border-radius;
			}
		}
		&::-moz-progress-bar {
			@if $progress-border-radius != 0 {
				border-radius: $progress-border-radius;
			}
		}
	}
}
// Mixin for inline progress.
// Variables:
// - $progress-inline-name : The name of the class used for the inline progress.
// - $progress-inline-width : The width of the inline progress.
@mixin make-progress-inline ($progress-inline-name, $progress-inline-width) {
	progress.#{$progress-inline-name} {
		display: inline-block;
		vertical-align: middle; 	// Align progress bar vertically to look better with text next to it.
		@if $progress-inline-width != 100% {
			width: $progress-inline-width;
		}
	}
}
// Mixin for alternate progress (progress color variants).
// Variables:
// - $progress-alt-name : The name of the class used for the alternate progress.
// - $progress-alt-fore-color : The progress bar color of the alternate progress.
// - $progress-alt-back-color : (Optional) The background color of the alternate progress. Defaults to the background color of the progress.
@mixin make-progress-alt-color ($progress-alt-name, $progress-alt-fore-color, $progress-alt-back-color: $progress-back-color) {
	progress.#{$progress-alt-name} {
		@if $progress-alt-back-color != $progress-back-color {
			background: $progress-alt-back-color; 	// Background color of the element (IE 10+ and Firefox).
			&::-webkit-progress-bar {					// Background of the element (webkit browsers).
				background: $progress-alt-back-color;
			}
		}
		@if $progress-alt-fore-color != $progress-fore-color {
			color: $progress-alt-fore-color;			// Foreground of the element (IE 10+).
			&::-webkit-progress-value {					// Foreground of the element (webkit browsers).
				background: $progress-alt-fore-color;
			}
			&::-moz-progress-bar { 						// Foreground of the element (Firefox).
				background: $progress-alt-fore-color;
			}
		}
	}
}
// Mixin for alternate progress styles.
// Variables:
// - $progress-alt-name : The name of the class used for the alternate progress style.
// - $progress-alt-height : The height of the alternate progress style.
// - $progress-alt-margin : (Optional) The margin of the alternate progress style. Defaults to the margin of the progress.
// - $progress-alt-border-style : (Optional) The border style of the alternate progress style. Defaults to the border style of the progress.
// - $progress-alt-border-radius : (Optional) The border radius of the alternate progress style. Defaults to the border radius of the progress.
@mixin make-progress-alt-style ($progress-alt-name, $progress-alt-height, 
	$progress-alt-margin: $progress-margin, $progress-alt-border-style: $progress-border-style, 
	$progress-alt-border-radius: $progress-border-radius) {
	progress.#{$progress-alt-name} {
		@if $progress-alt-height != $progress-height {
			height: $progress-alt-height;
		}
		@if $progress-alt-margin != $progress-margin {
			margin: $progress-alt-margin;
		}
		@if $progress-alt-border-style != $progress-border-style {
			border: $progress-alt-border-style;
		}
		@if progress-alt-border-radius != $progress-border-radius {
			border-radius: $progress-alt-border-radius;
			&::-webkit-progress-value {
				border-top-left-radius: $progress-alt-border-radius;
				border-bottom-left-radius: $progress-alt-border-radius;
			}
			&::-moz-progress-bar {
				border-top-left-radius: $progress-alt-border-radius;
				border-bottom-left-radius: $progress-alt-border-radius;
			}
			&[value="100"] {
				&::-webkit-progress-value {
					border-radius: $progress-alt-border-radius;
				}
				&::-moz-progress-bar {
					border-radius: $progress-alt-border-radius;
				}
			}
		}
	}
}
// Animation definition for donut spinner
@-webkit-keyframes spinner-donut-anim { 0% { 	-webkit-transform: rotate(0deg);} 100% { 	-webkit-transform: rotate(360deg);} }
		@keyframes spinner-donut-anim { 0% {			transform: rotate(0deg);} 100% {			transform: rotate(360deg);} }
// Style for donut spinner
.#{$spinner-donut-name} {
	display: inline-block;
	border: $spinner-donut-border-thickness solid $spinner-donut-back-color;
	border-left: $spinner-donut-border-thickness solid $spinner-donut-fore-color;
	border-radius: 50%;
	width: $spinner-donut-size;
	height: $spinner-donut-size;
	animation: spinner-donut-anim 1.2s linear infinite;
}
// Mixin for alternate donut spinner colors (spinner donut color variants).
// Variables:
// - $spinner-donut-alt-name : The name of the class used for the alternate donut spinner.
// - $spinner-donut-alt-back-color : The background color of the alternate donut spinner.
// - $spinner-donut-alt-fore-color : The foreground color of the alternate donut spinner.
@mixin make-spinner-donut-alt-color ($spinner-donut-alt-name, $spinner-donut-alt-back-color, $spinner-donut-alt-fore-color) {
	.#{$spinner-donut-name}.#{$spinner-donut-alt-name} {
		border: $spinner-donut-border-thickness solid $spinner-donut-alt-back-color;
		border-left: $spinner-donut-border-thickness solid $spinner-donut-alt-fore-color;
	}
}
// Mixin for alternate donut spinner styles (spinner donut styles variants).
// Variables:
// - $spinner-donut-alt-name : The name of the class used for the alternate donut spinner style.
// - $spinner-donut-alt-size : The size of the alternate donut spinner style.
// - $spinner-donut-alt-border-thickness : (Optional) The border thickness of the alternate donut spinner style.
//	Defaults to the value of $spinner-donut-alt-border-thickness.
@mixin make-spinner-donut-alt-style ($spinner-donut-alt-name, $spinner-donut-alt-size, 
	$spinner-donut-alt-border-thickness : $spinner-donut-border-thickness) {
	.#{$spinner-donut-name}.#{$spinner-donut-alt-name} {
		@if $spinner-donut-alt-border-thickness != $spinner-donut-border-thickness {
			border-width: $spinner-donut-alt-border-thickness;
		}
		@if $spinner-donut-alt-size != $spinner-donut-size {
			width: $spinner-donut-alt-size;
			height: $spinner-donut-alt-size;
		}
	}
}