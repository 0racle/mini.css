/*
	Definitions for contextual background elements and alerts.
*/
// Contextual background elements use the mark element as their base.
// Default styling for mark. Use mixins for alternate styles.
$mark-inline-block-name:		'inline-block' !default;						// Class name for <mark> inline block styling
mark {
	@if $mark-back-color != $back-color {
		background: $mark-back-color;
	}
	@if $mark-fore-color != $fore-color {
		color: $mark-fore-color;
	}
	@if $mark-font-size != 100% {
		font-size: $mark-font-size;
	}
	@if $mark-line-height != $base-line-height {
		line-height: $mark-line-height;
	}
	@if $mark-border-style != 0 {
		border: $mark-border-style;
	}
	@if $mark-border-radius != 0 {
		border-radius: $mark-border-radius;
	}
	@if $mark-padding != 0 {
		padding: $mark-padding;
	}
	@if $mark-margin != 0 {
		margin: $mark-margin;
	}
	@if $mark-box-shadow != none {
		box-shadow: $mark-box-shadow;
	}
	&.#{$mark-inline-block-name}{
		display: inline-block; // Can be used to deal with some problems.
	}
}
// Mixin for alternate mark (contextual color variants).
// Variables:
// - $mark-alt-name : The name of the class used for the alternate mark.
// - $mark-alt-back-color : The background color of the alternate mark.
// - $mark-alt-fore-color : (Optional) The text color of the alternate mark. Defaults to the text color of the mark.
@mixin make-mark-alt-color ($mark-alt-name, $mark-alt-back-color, $mark-alt-fore-color: $mark-fore-color) {
	mark.#{$mark-alt-name} {
		@if $mark-alt-back-color != $mark-back-color {
			background: $mark-alt-back-color;
		}
		@if $mark-alt-fore-color != $mark-fore-color {
			color: $mark-alt-fore-color;
		}
	}
}
// Mixin for alternative mark styles (contextual tags).
// Variables:
// - $mark-alt-name : The name of the class used for the alternate mark style.
// - $mark-alt-border-style : The border-style of the alternate mark style.
// - $mark-alt-border-radius : The border-radius of the alternate mark style.
// - $mark-alt-padding : (Optional) The padding of the alternate mark style. Defaults to the padding of the mark.
// - $mark-alt-font-size : (Optional) The font-size of the alternate mark style. Defaults to the font-size of the mark.
// - $mark-alt-line-height : (Optional) The line height of the alternate mark style. Defaults to the line height of the mark.
// - $mark-alt-box-shadow : (Optional) The box shadow of the alternate mark style. Defaults to the box shadow of the mark.
@mixin make-mark-alt-style ($mark-alt-name, $mark-alt-border-style, $mark-alt-border-radius,
	$mark-alt-padding : $mark-padding, $mark-alt-font-size : $mark-font-size, $mark-alt-line-height : $mark-line-height,
	$mark-alt-box-shadow : $mark-box-shadow ) {
	mark.#{$mark-alt-name} {
		@if $mark-alt-font-size != $mark-font-size {
			font-size: $mark-alt-font-size;
		}
		@if $mark-alt-line-height != $mark-line-height {
			line-height: $mark-alt-line-height;
		}
		@if $mark-alt-border-style != $mark-border-style {
			border: $mark-alt-border-style;
		}
		@if $mark-alt-border-radius != $mark-border-radius {
			border-radius: $mark-alt-border-radius;
		}
		@if $mark-alt-padding != $mark-padding {
			padding: $mark-alt-padding;
		}
		@if $mark-alt-box-shadow != $mark-box-shadow {
			box-shadow: $mark-alt-box-shadow;
		}
	}
}
// Alert variables
$alert-name:              	'alert' !default;               // Class name for the alerts
$alert-include-animated:   	true !default;               	// Should animated alerts be included?
$alert-animated-name:		'animated' !default;			// Class name for animated alerts
// Animation definition for animated alerts (included if wanted)
@if $alert-include-animated {
	@-webkit-keyframes alert-anim {
		0% 		{ 	-webkit-transform: scale(1); 	}
		45% 	{	-webkit-transform: scale(1);	}
		50% 	{	-webkit-transform: scale(1.005);}
		55% 	{	-webkit-transform: scale(1);	}
		100% 	{	-webkit-transform: scale(1);	}
	}
			@keyframes alert-anim {
		0% 		{ 			transform: scale(1); 	}
		45% 	{			transform: scale(1);	}
		50% 	{			transform: scale(1.005);}
		55% 	{			transform: scale(1);	}
		100% 	{			transform: scale(1);	}
	}
}
// Default styling for alerts. Use mixins for alternate styles
.#{$alert-name} {
	display: block;
	@if $alert-back-color != $back-color {
		background: $alert-back-color;
	}
	@if $alert-fore-color != $fore-color {
		color: $alert-fore-color;
	}
	@if $alert-border-style != 0 {
		border: $alert-border-style;
	}
	@if $alert-border-radius != 0 {
		border-radius: $alert-border-radius;
	}
	@if $alert-margin != 0 {
		margin: $alert-margin;
	}
	@if $alert-padding != 0 {
		padding: $alert-padding;
	}
	@if $alert-box-shadow != none {
		box-shadow: $alert-box-shadow;
	}
	@if $alert-include-animated {
		&.#{$alert-animated-name} {
			// Try to make the animated alert not blurry
			-webkit-backface-visibility: hidden;
					backface-visibility: hidden;
			-webkit-transform: translateZ(0);
					transform: translateZ(0);
			// Apply the animation
			-webkit-animation: alert-anim 6s linear infinite;
					animation: alert-anim 6s linear infinite;
		}
	}
}
// Mixin for alternate alert (alert color variants).
// Variables:
// - $alert-alt-name : The name of the class used for the alternate alert.
// - $alert-alt-back-color : The background color of the alternate alert.
// - $alert-alt-fore-color : (Optional) The text color of the alternate mark. Defaults to the text color of the alert.
@mixin make-alert-alt-color ($alert-alt-name, $alert-alt-back-color, $alert-alt-fore-color: $alert-fore-color) {
	.#{$alert-name}.#{$alert-alt-name} {
		@if $alert-alt-back-color != $alert-back-color {
			background: $alert-alt-back-color;
		}
		@if $alert-alt-fore-color != $alert-fore-color {
			color: $alert-alt-fore-color;
		}
	}
}
// Mixin for alternate alert styles (alert style variants).
// Variables:
// - $alert-alt-name : The name of the class used for the alternate alert style.
// - $alert-alt-border-style : The border style of the alternate alert style.
// - $alert-alt-border-radius : Border radius of the alternate alert style.
// - $alert-alt-padding : (Optional) Padding of the alternate alert style. Defaults to the alert's padding.
// - $alert-alt-margin : (Optional) Margin of the alternate alert style. Defaults to the alert's margin.
// - $alert-alt-box-shadow : (Optional) Box shadow of the alretnate alert style. Defaults to the alert's box shadow.
@mixin make-alert-alt-style ($alert-alt-name, $alert-alt-border-style, $alert-alt-border-radius,
	$alert-alt-padding : $alert-padding, $alert-alt-margin : $alert-margin,
	$alert-alt-box-shadow : $alert-box-shadow) {
	.#{$alert-name}.#{$alert-alt-name} {
		@if $alert-alt-border-style != $alert-border-style {
			border: $alert-alt-border-style;
		}
		@if $alert-alt-border-radius != $alert-border-radius {
			border-radius: $alert-alt-border-radius;
		}
		@if $alert-alt-padding != $alert-padding {
			padding: $alert-alt-padding;
		}
		@if $alert-alt-margin != $alert-margin {
			margin: $alert-alt-margin;
		}
		@if $alert-alt-box-shadow != $alert-box-shadow {
			box-shadow: $alert-alt-box-shadowbox-shadow;
		}
	}
}
// Tooltip variables
$include-tooltip:			true !default;						// Should tooltips be included?
$tooltip-name:              'tooltip' !default;               	// Class name for the tooltips
$tooltip-bottom-name:		'bottom' !default;					// Bottom tooltip class name
// Default styling for alerts. Use mixins for alternate styles
@if $include-tooltip {
	.#{$tooltip-name} {
		position: relative;
		display: inline-block;
		&:before, &:after {
			position: absolute;
			opacity: 0;
			clip: rect(0 0 0 0);
			-webkit-clip-path: inset(100%);
					clip-path: inset(100%);
			-webkit-transition: all 0.3s ease 0s;
					transition: all 0.3s ease 0s;
			// Remember to keep this index a lower value than the one used for stickies.
			z-index: 1010;	// Deals with certain problems when combined with cards and tables.
		}
		&:not(.#{$tooltip-bottom-name}):before, &:not(.#{$tooltip-bottom-name}):after { // Top (default) tooltip styling
			bottom: 100%;
			left: 50%;
		}
		&.#{$tooltip-bottom-name}:before, &.#{$tooltip-bottom-name}:after { // Bottom tooltip styling
			top: 100%;
			left: 50%;
		}
		&:hover, &:active, &:focus {
			&:before, &:after {
			opacity: 1;
			clip: auto;
			-webkit-clip-path: inset(0%);
					clip-path: inset(0%);
			}
		}
		&:before {	// This is the little tooltip triangle
			content: '';
			background: transparent;
			border: $tooltip-tail-size solid transparent;
			left: calc(50% - #{$tooltip-tail-size});
		}
		&:not(.#{$tooltip-bottom-name}):before { // Top (default) tooltip styling
			border-top-color: $tooltip-back-color;
		}
		&.#{$tooltip-bottom-name}:before { // Bottom tooltip styling
			border-bottom-color: $tooltip-back-color;
		}
		&:after {	// This is the actual tooltip's text block
			content: attr(aria-label);
			background: $tooltip-back-color;
			@if $tooltip-border-radius != 0 {
				border-radius: $tooltip-border-radius;
			}
			@if $tooltip-fore-color != $fore-color {
				color: $tooltip-fore-color;
			}
			@if $tooltip-padding != 0 {
				padding: $tooltip-padding;
			}
			@if $tooltip-box-shadow != none {
				box-shadow: $tooltip-box-shadow;
			}
			white-space: nowrap;
			-webkit-transform: translateX(-50%);
					transform: translateX(-50%);
		}
		&:not(.#{$tooltip-bottom-name}):after { // Top (default) tooltip styling
			margin-bottom: 2 * $tooltip-tail-size;
		}
		&.#{$tooltip-bottom-name}:after { // Bottom tooltip styling
			margin-top: 2 * $tooltip-tail-size;
		}
	}
}
// Mixin for alternate tooltip (tooltip color variants).
// Variables:
// - $tooltip-alt-name : The name of the class used for the alternate tooltip.
// - $tooltip-alt-back-color : The background color of the alternate tooltip.
// - $tooltip-alt-fore-color : (Optional) The text color of the alternate mark. Defaults to the text color of the tooltip.
@mixin make-tooltip-alt-color ($tooltip-alt-name, $tooltip-alt-back-color, $tooltip-alt-fore-color: $tooltip-fore-color) {
	.#{$tooltip-name}.#{$tooltip-alt-name} {
		@if $tooltip-alt-back-color != $tooltip-back-color {
			&:not(.#{$tooltip-bottom-name}):before { // Top (default) tooltip styling
				border-top-color: $tooltip-alt-back-color;
			}
			&.#{$tooltip-bottom-name}:before { // Bottom tooltip styling
				border-bottom-color: $tooltip-alt-back-color;
			}
		}
		&:after {
			@if $tooltip-alt-back-color != $tooltip-back-color {
				background: $tooltip-alt-back-color;
			}
			@if $tooltip-alt-fore-color != $tooltip-fore-color {
				color: $tooltip-alt-fore-color;
			}
		}
	}
}
// Mixin for alternate tooltip styles (tooltip style variants).
// Variables:
// - $tooltip-alt-name : The name of the class used for the alternate tooltip style.
// - $tooltip-alt-tail-size : The border style of the alternate tooltip style.
// - $tooltip-alt-border-radius : Border radius of the alternate tooltip style.
// - $tooltip-alt-padding : (Optional) Padding of the alternate tooltip style. Defaults to the tooltip's padding.
// - $tooltip-alt-box-shadow : (Optional) Box shadow of the alretnate tooltip style. Defaults to the tooltip's box shadow.
@mixin make-tooltip-alt-style ($tooltip-alt-name, $tooltip-alt-tail-size, $tooltip-alt-border-radius,
	$tooltip-alt-padding : $tooltip-padding, $tooltip-alt-box-shadow : $tooltip-box-shadow) {
	.#{$tooltip-name}.#{$tooltip-alt-name} {
		@if $tooltip-alt-tail-size != $tooltip-tail-size {
			&:before {
				border-width: $tooltip-alt-tail-size;
				left: calc(50% - #{$tooltip-alt-tail-size});
			}
			&:not(.#{$tooltip-bottom-name}):after { // Top (default) tooltip styling
				margin-bottom: 2 * $tooltip-alt-tail-size;
			}
			&.#{$tooltip-bottom-name}:after { // Bottom tooltip styling
				margin-top: 2 * $tooltip-alt-tail-size;
			}
		}

		&:after {
			@if $tooltip-alt-border-radius != $tooltip-border-radius {
				border-radius: $tooltip-alt-border-radius;
			}
			@if $tooltip-alt-padding != $tooltip-padding {
				padding: $tooltip-alt-padding;
			}
			@if $tooltip-alt-box-shadow != $tooltip-box-shadow {
				box-shadow: $tooltip-alt-box-shadow;
			}
		}
	}
}
